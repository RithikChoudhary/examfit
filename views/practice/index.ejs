<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Practice Sessions - ExamFit</title>
    
    <!-- SEO Meta Tags -->
    <meta name="description" content="Start your exam practice sessions with ExamFit. Choose from various competitive exams, configure duration, and practice with real previous year questions.">
    <meta name="keywords" content="practice sessions, mock tests, competitive exam practice, UPSC practice, SSC practice, banking exam practice, previous year questions, online test">
    <meta name="author" content="ExamFit">
    <meta name="robots" content="index, follow">
    <meta name="language" content="English">
    <meta name="revisit-after" content="7 days">
    
    <!-- Open Graph Tags -->
    <meta property="og:title" content="Practice Sessions - ExamFit">
    <meta property="og:description" content="Start practicing for competitive exams with configurable mock tests and previous year questions">
    <meta property="og:type" content="website">
    <meta property="og:url" content="https://examfit.in/practice">
    <meta property="og:image" content="https://examfit.in/templates/logo.webp">
    <meta property="og:site_name" content="ExamFit">
    
    <!-- Twitter Card Tags -->
    <meta name="twitter:card" content="summary_large_image">
    <meta name="twitter:title" content="Practice Sessions - ExamFit">
    <meta name="twitter:description" content="Start practicing for competitive exams">
    <meta name="twitter:image" content="https://examfit.in/templates/logo.webp">
    
    <!-- Canonical URL -->
    <link rel="canonical" href="https://examfit.in/practice">
    
    <!-- JSON-LD Structured Data -->
    <script type="application/ld+json">
    {
      "@context": "https://schema.org",
      "@type": "WebPage",
      "name": "Practice Sessions - ExamFit",
      "description": "Start your exam practice sessions with ExamFit. Choose from various competitive exams, configure duration, and practice with real previous year questions.",
      "url": "https://examfit.in/practice",
      "mainEntity": {
        "@type": "Course",
        "name": "Competitive Exam Practice Sessions",
        "description": "Interactive practice sessions for competitive exams with configurable mock tests",
        "provider": {
          "@type": "EducationalOrganization",
          "name": "ExamFit",
          "url": "https://examfit.in"
        },
        "courseMode": "online",
        "educationalLevel": "HigherEducation",
        "teaches": ["UPSC", "SSC", "Banking", "Competitive Exams"]
      },
      "breadcrumb": {
        "@type": "BreadcrumbList",
        "itemListElement": [
          {
            "@type": "ListItem",
            "position": 1,
            "name": "Home",
            "item": "https://examfit.in"
          },
          {
            "@type": "ListItem",
            "position": 2,
            "name": "Practice",
            "item": "https://examfit.in/practice"
          }
        ]
      }
    }
    </script>
    
    <link rel="stylesheet" href="/css/home.css">
    <link rel="stylesheet" href="/css/navbar.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <style>
        .practice-container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 1rem;
        }
        
        .practice-header {
            text-align: center;
            margin-bottom: 2rem;
            padding: 1rem 0;
        }
        
        .practice-header h1 {
            font-size: 1.75rem;
            font-weight: 700;
            color: var(--gray-900);
            margin-bottom: 0.5rem;
        }
        
        .practice-header p {
            font-size: 1rem;
            color: var(--gray-600);
        }
        
        /* Main layout - responsive grid */
        .practice-layout {
            display: grid;
            grid-template-columns: 1fr;
            gap: 1.5rem;
        }
        
        @media (min-width: 768px) {
            .practice-layout {
                grid-template-columns: 280px 1fr;
            }
        }
        
        /* Exam sidebar */
        .exam-sidebar {
            background: #f8fafc;
            border-radius: 12px;
            padding: 1rem;
            height: fit-content;
            border: 1px solid #e2e8f0;
        }
        
        .sidebar-title {
            font-size: 1rem;
            font-weight: 600;
            color: #1f2937;
            margin-bottom: 1rem;
            text-align: center;
        }
        
        /* Compact exam cards */
        .exam-list {
            display: flex;
            flex-direction: column;
            gap: 0.75rem;
        }
        
        @media (max-width: 767px) {
            .exam-list {
                display: grid;
                grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
                gap: 1rem;
                min-height: 200px;
            }
            
            .exam-sidebar {
                order: 1;
                margin-bottom: 1rem;
            }
            
            .config-panel {
                order: 2;
            }
        }
        
        .exam-card {
            background: #ffffff;
            border: 2px solid #e2e8f0;
            border-radius: 8px;
            padding: 1rem;
            cursor: pointer;
            transition: all 0.2s ease;
            text-align: center;
            position: relative;
            display: block;
            visibility: visible;
            opacity: 1;
            min-height: 120px;
            width: 100%;
            box-sizing: border-box;
            margin-bottom: 0.75rem;
        }
        
        .exam-card:hover {
            border-color: #3b82f6;
            transform: translateY(-1px);
            box-shadow: 0 4px 12px rgba(59, 130, 246, 0.15);
        }
        
        .exam-card.selected {
            border-color: #3b82f6;
            background: rgba(59, 130, 246, 0.05);
            box-shadow: 0 0 0 1px rgba(59, 130, 246, 0.1);
        }
        
        .exam-icon {
            width: 32px;
            height: 32px;
            background: linear-gradient(135deg, #3b82f6, #8b5cf6);
            border-radius: 8px;
            display: flex;
            align-items: center;
            justify-content: center;
            margin: 0 auto 0.5rem;
            color: #ffffff;
            font-size: 0.875rem;
        }
        
        .exam-card h3 {
            color: #1f2937;
            margin: 0 0 0.25rem 0;
            font-size: 0.875rem;
            font-weight: 600;
            line-height: 1.2;
        }
        
        .exam-card p {
            color: #6b7280;
            margin: 0;
            font-size: 0.75rem;
        }
        
        /* Configuration panel */
        .config-panel {
            background: #ffffff;
            border-radius: 12px;
            padding: 1.5rem;
            border: 1px solid #e2e8f0;
            min-height: 500px;
        }
        
        .config-content {
            display: none;
        }
        
        .config-content.show {
            display: block;
        }
        
        .config-placeholder {
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            height: 400px;
            color: #6b7280;
            text-align: center;
        }
        
        .config-placeholder i {
            font-size: 3rem;
            margin-bottom: 1rem;
            color: #d1d5db;
        }
        
        .form-section {
            margin-bottom: 1.5rem;
        }
        
        .form-title {
            font-size: 1.125rem;
            font-weight: 600;
            color: #1f2937;
            margin-bottom: 1rem;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }
        
        .form-row {
            display: grid;
            grid-template-columns: 1fr;
            gap: 1rem;
            margin-bottom: 1rem;
        }
        
        @media (min-width: 640px) {
            .form-row {
                grid-template-columns: 1fr 1fr;
            }
        }
        
        .form-group {
            margin-bottom: 1rem;
        }
        
        .form-label {
            display: block;
            font-weight: 500;
            color: #374151;
            margin-bottom: 0.5rem;
            font-size: 0.875rem;
        }
        
        .form-select {
            width: 100%;
            padding: 0.75rem;
            border: 2px solid #e5e7eb;
            border-radius: 6px;
            font-size: 0.875rem;
            transition: border-color 0.2s ease;
            background: #ffffff;
        }
        
        .form-select:focus {
            outline: none;
            border-color: #3b82f6;
            box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);
        }
        
        .settings-grid {
            display: grid;
            grid-template-columns: 1fr;
            gap: 1rem;
            margin-bottom: 1.5rem;
        }
        
        @media (min-width: 640px) {
            .settings-grid {
                grid-template-columns: 1fr 1fr;
            }
        }
        
        .setting-card {
            background: #f8fafc;
            padding: 1rem;
            border-radius: 8px;
            border: 1px solid #e2e8f0;
        }
        
        .setting-input {
            width: 100%;
            padding: 0.5rem;
            border: 1px solid #d1d5db;
            border-radius: 6px;
            text-align: center;
            font-size: 1rem;
            font-weight: 600;
            margin-top: 0.5rem;
        }
        
        .setting-help {
            font-size: 0.75rem;
            color: #6b7280;
            margin-top: 0.5rem;
            text-align: center;
        }
        
        .start-button {
            background: #3b82f6;
            color: #ffffff;
            border: none;
            padding: 0.875rem 2rem;
            border-radius: 8px;
            font-size: 1rem;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.2s ease;
            width: 100%;
            margin-top: 1rem;
        }
        
        .start-button:hover:not(:disabled) {
            background: #2563eb;
            transform: translateY(-1px);
        }
        
        .start-button:disabled {
            background: #9ca3af;
            cursor: not-allowed;
            transform: none;
        }
        
        .quick-links {
            display: flex;
            gap: 0.75rem;
            justify-content: center;
            flex-wrap: wrap;
            margin-top: 2rem;
        }
        
        .quick-link {
            background: #6b7280;
            color: #ffffff;
            padding: 0.5rem 1rem;
            border-radius: 6px;
            text-decoration: none;
            font-weight: 500;
            font-size: 0.875rem;
            transition: all 0.2s ease;
        }
        
        .quick-link:hover {
            background: #4b5563;
            transform: translateY(-1px);
        }
        
        /* Mobile optimizations */
        @media (max-width: 767px) {
            .practice-container {
                padding: 0.75rem;
            }
            
            .practice-header h1 {
                font-size: 1.5rem;
            }
            
            .config-panel {
                padding: 1rem;
            }
            
            .config-placeholder {
                height: 300px;
            }
            
            .exam-card h3 {
                font-size: 0.8rem;
            }
            
            .exam-card p {
                font-size: 0.7rem;
            }
        }
    </style>
</head>
<body>
    <%- include('../partials/navbar') %>
    
    <div class="practice-container">
        <div class="practice-header">
            <h1><i class="fas fa-clock"></i> Practice Sessions</h1>
            <p>Select an exam, configure your session, and start practicing</p>
        </div>
        
        <!-- New Mobile-Friendly Layout -->
        <div class="practice-layout">
            <!-- Exam Sidebar -->
            <div class="exam-sidebar">
                <div class="sidebar-title">
                    <i class="fas fa-list"></i> Choose Exam
                </div>
                <div class="exam-list">
                    <!-- Debug Info (moved to bottom of page) -->
                    
                    <% if (exams && exams.length > 0) { %>
                        <!-- Show actual exams -->
                        <% exams.forEach((exam, index) => { %>
                            <div class="exam-card" onclick="selectExam('<%= exam.examId %>', '<%= exam.examName %>')">
                                <div class="exam-icon">
                                    <i class="fas fa-graduation-cap"></i>
                                </div>
                                <h3><%= exam.examName %></h3>
                                <p><%= exam.subjectCount || (exam.subjects ? exam.subjects.length : 0) %> subjects</p>
                            </div>
                        <% }) %>
                        
                        <!-- Debug: Show raw exam count -->
                        <div style="background: #f0f9ff; border: 1px solid #0ea5e9; border-radius: 6px; padding: 0.5rem; margin-top: 1rem; font-size: 0.75rem; color: #0c4a6e;">
                            📊 Debug: Found <%= exams.length %> exams
                        </div>
                    <% } else { %>
                        <!-- No exams state -->
                        <div style="text-align: center; padding: 2rem; color: #6b7280; border: 2px dashed #d1d5db; border-radius: 8px; background: #f9fafb;">
                            <i class="fas fa-database" style="font-size: 2.5rem; margin-bottom: 1rem; color: #d1d5db;"></i>
                            <h3 style="color: #374151; margin-bottom: 1rem; font-size: 1.125rem;">No Exams Available</h3>
                            <p style="margin: 0 0 1rem 0; font-size: 0.875rem; color: #6b7280;">
                                The data.json file appears to be empty or missing exam data.
                            </p>
                            <div style="background: #fef3c7; border: 1px solid #f59e0b; border-radius: 6px; padding: 1rem; margin: 1rem 0; text-align: left;">
                                <p style="margin: 0; font-size: 0.875rem; color: #92400e;">
                                    <strong>📋 To add exams:</strong><br>
                                    1. Use the <a href="/dashboard" style="color: #1d4ed8;">Dashboard</a> to upload exam data<br>
                                    2. Or check the data/data.json file structure<br>
                                    3. Ensure it follows the required format
                                </p>
                            </div>
                            <a href="/dashboard" style="display: inline-block; background: #3b82f6; color: white; padding: 0.75rem 1.5rem; border-radius: 6px; text-decoration: none; font-weight: 500; margin-top: 0.5rem;">
                                <i class="fas fa-plus"></i> Go to Dashboard
                            </a>
                            
                            <!-- Debug info for no exams -->
                            <div style="background: #fef2f2; border: 1px solid #f87171; border-radius: 6px; padding: 1rem; margin-top: 1rem; font-size: 0.75rem; color: #991b1b; text-align: left;">
                                <strong>🔍 Debug Info:</strong><br>
                                Exams variable: <%= typeof exams %><br>
                                Exams length: <%= exams ? exams.length : 'undefined' %><br>
                                Check browser console for more details
                            </div>
                        </div>
                    <% } %>
                </div>
            </div>
            
            <!-- Configuration Panel -->
            <div class="config-panel">
                <div class="config-placeholder" id="configPlaceholder">
                    <i class="fas fa-arrow-left"></i>
                    <h3>Select an exam to start</h3>
                    <p>Choose an exam from the sidebar to configure your practice session</p>
                </div>
                
                <div class="config-content" id="configContent">
                    <div class="form-section">
                        <div class="form-title">
                            <i class="fas fa-cog"></i>
                            Configure Practice Session
                        </div>
                        
                        <div class="form-row">
                            <div class="form-group">
                                <label class="form-label" for="subjectSelect">Subject</label>
                                <select class="form-select" id="subjectSelect" onchange="loadQuestionPapers()">
                                    <option value="">Choose subject...</option>
                                </select>
                            </div>
                            
                            <div class="form-group">
                                <label class="form-label" for="paperSelect">Question Paper</label>
                                <select class="form-select" id="paperSelect" onchange="updateQuestionSettings()">
                                    <option value="">Choose paper...</option>
                                </select>
                            </div>
                        </div>
                        
                        <div class="settings-grid">
                            <div class="setting-card">
                                <label class="form-label">Duration (minutes)</label>
                                <input type="number" class="setting-input" id="duration" value="60" min="5" max="180">
                                <div class="setting-help">Recommended: 1-2 min per question</div>
                            </div>
                            
                            <div class="setting-card">
                                <label class="form-label">Questions</label>
                                <input type="number" class="setting-input" id="questionCount" value="" placeholder="0" min="1" max="100" disabled>
                                <div class="setting-help" id="questionHelp">Select a paper first</div>
                            </div>
                        </div>
                        
                        <button class="start-button" onclick="startPracticeSession()" disabled id="startBtn">
                            <i class="fas fa-play"></i> Start Practice Session
                        </button>
                    </div>
                </div>
            </div>
        </div>
        
        <!-- Quick Access Links -->
        <div class="quick-links">
            <a href="/practice/progress" class="quick-link">
                <i class="fas fa-chart-bar"></i> Progress
            </a>
            <a href="/" class="quick-link">
                <i class="fas fa-home"></i> Home
            </a>
        </div>
    </div>
    
    <script>
        // Debug logging
        console.log('Practice page loaded');
        
        let selectedExam = null;
        let subjects = [];
        let questionPapers = [];
        
        function selectExam(examId, examName) {
            selectedExam = { id: examId, name: examName };
            
            // Update visual selection
            document.querySelectorAll('.exam-card').forEach(card => {
                card.classList.remove('selected');
            });
            event.currentTarget.classList.add('selected');
            
            // Load subjects
            loadSubjects(examId);
            
            // Show configuration panel
            document.getElementById('configPlaceholder').style.display = 'none';
            document.getElementById('configContent').classList.add('show');
        }
        
        async function loadSubjects(examId) {
            try {
                const response = await fetch(`/practice/api/subjects/${examId}`);
                const data = await response.json();
                subjects = data.subjects;
                
                const subjectSelect = document.getElementById('subjectSelect');
                subjectSelect.innerHTML = '<option value="">Choose subject...</option>';
                
                subjects.forEach(subject => {
                    const option = document.createElement('option');
                    option.value = subject.subjectId;
                    option.textContent = subject.subjectName;
                    subjectSelect.appendChild(option);
                });
                
                // Reset other selects
                document.getElementById('paperSelect').innerHTML = '<option value="">Choose paper...</option>';
                updateStartButton();
            } catch (error) {
                console.error('Error loading subjects:', error);
            }
        }
        
        async function loadQuestionPapers() {
            const subjectId = document.getElementById('subjectSelect').value;
            if (!subjectId || !selectedExam) return;
            
            try {
                const response = await fetch(`/practice/api/questionPapers/${selectedExam.id}/${subjectId}`);
                const data = await response.json();
                questionPapers = data.questionPapers;
                
                const paperSelect = document.getElementById('paperSelect');
                paperSelect.innerHTML = '<option value="">Choose paper...</option>';
                
                questionPapers.forEach(paper => {
                    const option = document.createElement('option');
                    option.value = paper.questionPaperId;
                    option.textContent = `${paper.questionPaperName} (${paper.questions ? paper.questions.length : 0} questions)`;
                    paperSelect.appendChild(option);
                });
                
                updateStartButton();
            } catch (error) {
                console.error('Error loading question papers:', error);
            }
        }
        
        function updateQuestionSettings() {
            const paperSelect = document.getElementById('paperSelect');
            const selectedPaperId = paperSelect.value;
            const questionCountInput = document.getElementById('questionCount');
            const questionHelp = document.getElementById('questionHelp');
            
            if (selectedPaperId) {
                const selectedPaper = questionPapers.find(p => p.questionPaperId === selectedPaperId);
                if (selectedPaper && selectedPaper.questions) {
                    const maxQuestions = selectedPaper.questions.length;
                    
                    // Enable input and set constraints
                    questionCountInput.disabled = false;
                    questionCountInput.max = maxQuestions;
                    questionCountInput.min = 1;
                    questionCountInput.value = maxQuestions;
                    questionCountInput.placeholder = maxQuestions;
                    
                    // Update help text
                    questionHelp.textContent = `Available: ${maxQuestions} questions`;
                    questionHelp.style.color = '#059669';
                } else {
                    questionCountInput.disabled = true;
                    questionCountInput.value = '';
                    questionHelp.textContent = 'No questions found';
                    questionHelp.style.color = '#dc2626';
                }
            } else {
                questionCountInput.disabled = true;
                questionCountInput.value = '';
                questionCountInput.placeholder = '0';
                questionHelp.textContent = 'Select a paper first';
                questionHelp.style.color = '#6b7280';
            }
            
            updateStartButton();
        }
        
        function updateStartButton() {
            const subjectSelected = document.getElementById('subjectSelect').value;
            const paperSelected = document.getElementById('paperSelect').value;
            const startBtn = document.getElementById('startBtn');
            
            if (subjectSelected && paperSelected) {
                startBtn.disabled = false;
                startBtn.style.opacity = '1';
            } else {
                startBtn.disabled = true;
                startBtn.style.opacity = '0.5';
            }
        }
        
        function startPracticeSession() {
            const subjectId = document.getElementById('subjectSelect').value;
            const paperId = document.getElementById('paperSelect').value;
            const duration = document.getElementById('duration').value;
            const questionCount = document.getElementById('questionCount').value;
            
            if (!selectedExam || !subjectId || !paperId) {
                alert('Please select all required options');
                return;
            }
            
            const url = `/practice/session/${selectedExam.id}/${subjectId}/${paperId}?duration=${duration}&questionCount=${questionCount}`;
            window.location.href = url;
        }
    </script>
</body>
</html>
