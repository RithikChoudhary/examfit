<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>ExamFit</title>
  <link rel="stylesheet" href="/css/home.css">
  <link rel="stylesheet" href="/css/navbar.css">
  <link rel="preload" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css" as="style" onload="this.onload=null;this.rel='stylesheet'">
<noscript><link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css"></noscript>

  <link rel="stylesheet" href="/css/home-footer.css">
</head>

<body>
  <%- include('partials/navbar') %>

  <div class="content-wrapper">
    <section class="hero-section">
      <h1 class="hero-title">Welcome to ExamFit</h1>
      <p class="hero-subtitle">Choose an exam to begin your preparation</p>

      <div class="exam-container">
        <% exams.forEach((exam)=> { %>
          <div class="exam-column">
            <div class="exam-card" data-exam-id="<%= exam.examId %>">
              <div class="exam-icon">
                <img src="/templates/<%= exam.examId %>.png" alt="<%= exam.examName %>">
              </div>
              <div class="exam-title">
                <%= exam.examName %>
              </div>
            </div>
            <div class="subjects-container" id="subjects-<%= exam.examId %>"></div>
          </div>
        <% }); %>
      </div>
    </section>
  </div>

  <%- include('./partials/footer') %>

  <script>
//   document.querySelectorAll('.exam-card').forEach(card => {
//   card.addEventListener('click', async function() {
//     const examId = this.dataset.examId;
//     const subjectsContainer = document.getElementById(`subjects-${examId}`);
//     const allSubjectsContainers = document.querySelectorAll('.subjects-container');

//     // Hide other subject containers
//     allSubjectsContainers.forEach(container => {
//       if (container.id !== `subjects-${examId}`) {
//         container.classList.remove('show-subjects');
//       }
//     });

//     // Toggle the current subjects container
//     subjectsContainer.classList.toggle('show-subjects');

//     // Prevent multiple fetch requests
//     if (subjectsContainer.dataset.loading === "true") {
//       return; // If already fetching, don't fetch again
//     }

//     // If already populated, don't fetch again
//     if (subjectsContainer.children.length > 0) {
//       return;
//     }

//     // Mark as loading to prevent duplicate fetches
//     subjectsContainer.dataset.loading = "true";

//     try {
//       const response = await fetch(`/api/subjects/${examId}`);
//       const data = await response.json();

//       // Clear previous content to prevent duplicates
//       subjectsContainer.innerHTML = '';

//       if (data.subjects && data.subjects.length > 0) {
//         data.subjects.forEach(subject => {
//           const subjectLink = document.createElement('a');
//           subjectLink.href = `/${examId}/${subject.subjectId}/questionPapers`;
//           subjectLink.className = 'subject-card';

//           // Choose icon and color class based on subject name
//           let iconClass = 'fa-book-open';
//           let colorClass = '';
//           const subjectLower = subject.subjectName.toLowerCase();

//           if (subjectLower.includes('math') || subjectLower.includes('maths')) {
//             iconClass = 'fa-square-root-variable';
//             colorClass = 'math';
//           } else if (subjectLower.includes('physics')) {
//             iconClass = 'fa-atom';
//             colorClass = 'physics';
//           } else if (subjectLower.includes('chemistry')) {
//             iconClass = 'fa-flask';
//             colorClass = 'chemistry';
//           } else if (subjectLower.includes('general')) {
//             iconClass = 'fa-dna';
//             colorClass = 'biology';
//           } else if (subjectLower.includes('science') || subjectLower.includes('programming')) {
//             iconClass = 'fa-laptop-code';
//             colorClass = 'computer';
//           } else if (subjectLower.includes('economy') || subjectLower.includes('language')) {
//             iconClass = 'fa-language';
//             colorClass = 'english';
//           } else if (subjectLower.includes('history')) {
//             iconClass = 'fa-landmark';
//             colorClass = 'history';
//           } else if (subjectLower.includes('geography')) {
//             iconClass = 'fa-earth-americas';
//             colorClass = 'geography';
//           }

//           subjectLink.innerHTML = `
//             <i class="fas ${iconClass} subject-icon ${colorClass}"></i>
//             <span class="subject-name">${subject.subjectName}</span>
//           `;

//           subjectsContainer.appendChild(subjectLink);
//         });
//       } else {
//         subjectsContainer.innerHTML = '<p class="no-subjects">No subjects found for this exam.</p>';
//       }
//     } catch (error) {
//       console.error('Error:', error);
//       subjectsContainer.innerHTML = '<p class="error-message">Failed to load subjects.</p>';
//     } finally {
//       // Remove the loading state
//       subjectsContainer.dataset.loading = "false";
//     }
//   });
// });

  
document.querySelectorAll('.exam-card').forEach(card => {
  card.addEventListener('click', async function () {
    const examId = this.dataset.examId;
    const subjectsContainer = document.getElementById(`subjects-${examId}`);
    const allSubjectsContainers = document.querySelectorAll('.subjects-container');

    // Hide other subject containers
    allSubjectsContainers.forEach(container => {
      if (container.id !== `subjects-${examId}`) {
        container.classList.remove('show-subjects');
      }
    });

    // Toggle the current subjects container
    subjectsContainer.classList.toggle('show-subjects');

    // Prevent multiple fetch requests
    if (subjectsContainer.dataset.loading === "true") {
      return;
    }

    // If already populated, don't fetch again
    if (subjectsContainer.children.length > 0) {
      return;
    }

    // Mark as loading
    subjectsContainer.dataset.loading = "true";

    // Start timing the request
    console.time(`Fetch subjects for ${examId}`);

    try {
      const response = await fetch(`/api/subjects/${examId}`);
      console.timeEnd(`Fetch subjects for ${examId}`); // End timing
      const data = await response.json();

      // Clear previous content to prevent duplicates
      subjectsContainer.innerHTML = '';

      if (data.subjects && data.subjects.length > 0) {
        data.subjects.forEach(subject => {
          const subjectLink = document.createElement('a');
          subjectLink.href = `/${examId}/${subject.subjectId}/questionPapers`;
          subjectLink.className = 'subject-card';
          let iconClass = 'fa-book-open';
          let colorClass = '';
          const subjectLower = subject.subjectName.toLowerCase();

          if (subjectLower.includes('math')) {
            iconClass = 'fa-square-root-variable';
            colorClass = 'math';
          } else if (subjectLower.includes('physics')) {
            iconClass = 'fa-atom';
            colorClass = 'physics';
          } else if (subjectLower.includes('chemistry')) {
            iconClass = 'fa-flask';
            colorClass = 'chemistry';
          } else if (subjectLower.includes('general')) {
            iconClass = 'fa-dna';
            colorClass = 'biology';
          } else if (subjectLower.includes('science') || subjectLower.includes('programming')) {
            iconClass = 'fa-laptop-code';
            colorClass = 'computer';
          } else if (subjectLower.includes('economy') || subjectLower.includes('language')) {
            iconClass = 'fa-language';
            colorClass = 'english';
          } else if (subjectLower.includes('history')) {
            iconClass = 'fa-landmark';
            colorClass = 'history';
          } else if (subjectLower.includes('geography')) {
            iconClass = 'fa-earth-americas';
            colorClass = 'geography';
          }

          subjectLink.innerHTML = `
            <i class="fas ${iconClass} subject-icon ${colorClass}"></i>
            <span class="subject-name">${subject.subjectName}</span>
          `;

          subjectsContainer.appendChild(subjectLink);
        });
      } else {
        subjectsContainer.innerHTML = '<p class="no-subjects">No subjects found for this exam.</p>';
      }
    } catch (error) {
      console.error('Error:', error);
      subjectsContainer.innerHTML = '<p class="error-message">Failed to load subjects.</p>';
    } finally {
      // Remove the loading state
      subjectsContainer.dataset.loading = "false";
    }
  });
});

  </script>
</body>

</html>